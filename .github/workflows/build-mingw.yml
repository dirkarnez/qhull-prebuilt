name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: qhull
      tagName: v8.0.2
      cmakeInstallationPath: qhull-installation
      mingwTargetZip: qhull-${{ github.ref_name }}-mingw64-x86_64-8.1.0-release-posix-seh-rt_v6-rev0.zip
    steps:
      - name: git clone
        shell: cmd
        run: git clone --recursive https://github.com/qhull/qhull.git && cd qhull && git checkout ${{ env.tagName }}
        
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z -L -O -J &&^
          7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: |
          curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L -O -J &&^
          7z.exe x cmake-3.24.0-windows-x86_64.zip
        
#      - name: curl zlib
#        shell: cmd
#        run: |
#          curl https://github.com/dirkarnez/zlib-prebuilt/releases/download/v1.2.13/zlib-v1.2.13-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -L -O -J &&^
#          7z.exe x zlib-v1.2.13-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"zlib-v1.2.13-mingw64-x86_64-posix-seh-rev0-8.1.0"
#          
#      - name: curl libexpat
#        shell: cmd
#        run: |
#          curl https://github.com/dirkarnez/libexpat-prebuilt/releases/download/v2.5.0/libexpat-v2.5.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip  -L -O -J &&^
#          7z.exe x libexpat-v2.5.0-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"libexpat-v2.5.0-mingw64-x86_64-posix-seh-rev0-8.1.0"
          
#       - name: curl PortableGit-2.38.1-64-bit.7z.exe
#         shell: cmd
#         run: |
#           curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L -O -J &&^
#           7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
        
#       - name: disable test
#         shell: cmd
#         run: |
#           cd libfixmath &&^
#           dir &&^
#           "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i "s/include(tests\/tests\.cmake)/#include(tests\/tests\.cmake)/g" CMakeLists.txt &&^
#           type CMakeLists.txt
          
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
            set CD_LINUX=%CD:\=/%
            gcc --version &&^
            cd qhull &&^
            cmake.exe -G "MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "qhull/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "qhull/cmake-build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
